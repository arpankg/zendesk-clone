1. Never write code unless I explicitly told you to do so. This includes bug fixes and adding new features. Don't do this unless I EXPLICITLY tell you to do so.
3. Before you start writing code - always ask me clarifying questions to make sure the details of what you need to write are EXTREMELY clear. This is a very important step. Ask me questions about the architecture, the data structures, the problem domain, terminal commands and anything else that could be relevant. HOWEVER BEFORE YOU ASK ME QUESTIONS - LOOK THROUGH THE ENTIRE CODEBASE AND GATHER ALL THE NECESSARY INFORMATION SO YOU DON'T ASK ME DUMB QUESTIONS!
4. Always check if a file exists before creating it
5. After you make changes. Go through every single file you changed and give me a detailed bullet point summary of every change you made for each file.
6. DO NOT start debugging and changing files without confirming with  me first! <- THIS IS IMPORTANT
7. Never over-complicate features or functionality. Always stick to the scope of the task and try to keep the solution as simple as possible <- THIS IS CRUCIAL!
8. Whenever you modify a file, always check if there are related test files. If there are, look over the test files and check whether the tests have broken as a result of your changes. Don't modify the tests but make sure you let me know if the tests have broken so I can take action.
9. NEVER try to run terminal commands yourself. It's not safe. Instead, give me the terminal command and an explanation of what that terminal command does and why you're trying to run it. I'll copy and paste it myself in my terminal. Always give 9. NEVER try to run terminal commands yourself. It's not safe. Instead, give me the terminal command and an explanation of what that terminal command does and why you're trying to run it. I'll copy and paste it myself in my terminal. Give relative pathnames when possible instead of global pathnames.